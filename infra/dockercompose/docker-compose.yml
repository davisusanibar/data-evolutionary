version: "3.9"

networks:
  default:
    name: topaya # Got exception: java.net.URISyntaxException Illegal character in hostname at index 27: thrift://hive-metastore.dockercompose_default:9083. The hostname (dockercompose_default) was auto generated by Docker Compose, so we have to change the default name explicitly.

services:
  broker:
    image: apache/kafka:latest
    hostname: broker
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT_HOST://broker:9092,PLAINTEXT://broker:19092"
      KAFKA_PROCESS_ROLES: "broker,controller"
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@broker:29093"
      KAFKA_LISTENERS: "CONTROLLER://:29093,PLAINTEXT_HOST://:9092,PLAINTEXT://:19092"
      KAFKA_INTER_BROKER_LISTENER_NAME: "PLAINTEXT"
      KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      CLUSTER_ID: "4L6g3nShT-eMCtK--X86sw"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_LOG_DIRS: "/tmp/v1/kraft-combined-logs"

  schema-registry:
    image: confluentinc/cp-schema-registry:latest
    hostname: registry
    container_name: schema-registry
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: "PLAINTEXT_HOST://broker:9092,PLAINTEXT://broker:19092"
      SCHEMA_REGISTRY_HOST_NAME: registry
      SCHEMA_REGISTRY_LISTENERS: "http://0.0.0.0:8081"

  postgres:
    image: postgres:latest
    hostname: postgres
    container_name: cdc-postgres
    restart: always
    volumes:
      - ./postgres/postgres-init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: flink2024!
      POSTGRES_DB: postgres
    command: >
      postgres -c wal_level=logical
      -c max_replication_slots=100
      -c max_wal_senders=80
      -c logging_collector=on
      -c log_statement=all
      -c log_destination='stderr'
      -c log_directory='/var/lib/postgresql/data/pg_log'
      -c log_filename='postgresql-%Y-%m-%d_%H%M%S.log'
      -c log_truncate_on_rotation=on
      -c log_rotation_age=1d
      -c log_rotation_size=100MB

  namenode:
    build:
      context: .
      dockerfile: DockerfileNamenode
    hostname: namenode
    container_name: hadoo_namenode
    command: [ "hdfs", "namenode" ]
    ports:
      - "9870:9870"  # Web UI
      - "8020:8020"  # HDFS RPC
    env_file:
      - ./config
    environment:
      ENSURE_NAMENODE_DIR: "/tmp/hadoop-hadoop/dfs/name"
      # Evita el problema de InconsistentFSStateException

  datanode:
    build:
      context: .
      dockerfile: DockerfileDatanode
    hostname: datanode
    container_name: hadoop_datanode
    command: [ "hdfs", "datanode" ]
    ports:
      - "9864:9864"  # DataNode Web UI
      - "9866:9866"  # Conexión entre NameNode y DataNode
    volumes:
      - ./datanode_data:/opt/hadoop/dfs/data
      # Montaje de volumen para verificar los directorios de datos de HDFS desde el host
    env_file:
      - ./config
    environment:
      ENSURE_NAMENODE_DIR: "/opt/hadoop/dfs/data"
      # Dirección de datos de HDFS definida en HDFS-SITE.XML

  mysql-hive:
    image: mysql:8.0
    container_name: mysql-hive
    volumes:
      - ./hive_database:/var/lib/mysql # Persistencia de datos de MySQL
      - ./mysql/mysql-connector-j-9.0.0.jar:/opt/hive/lib/mysql-connector-j-9.0.0.jar
    ports:
      - "3308:3306"
    environment:
      MYSQL_ROOT_PASSWORD: abc
      MYSQL_DATABASE: hive

  hive:
    image: apache/hive:4.0.0
    restart: always
    container_name: hive-metastore # Caused by: org.apache.hadoop.hive.metastore.api.MetaException: Got exception: java.net.URISyntaxException Illegal character in hostname at index 27: thrift://hive-metastore.dockercompose_default:9083
    ports:
      - "9083:9083"
    volumes:
      - ./mysql/mysql-connector-j-9.0.0.jar:/opt/hive/lib/mysql-connector-j-9.0.0.jar
    environment:
      SERVICE_NAME: metastore
      DB_DRIVER: mysql
      SERVICE_OPTS: >
        -Dhive.metastore.warehouse.dir=hdfs://namenode/catalogo/hive
        -Djavax.jdo.option.ConnectionDriverName=com.mysql.cj.jdbc.Driver
        -Djavax.jdo.option.ConnectionURL=jdbc:mysql://mysql-hive:3306/hive
        -Djavax.jdo.option.ConnectionUserName=root
        -Djavax.jdo.option.ConnectionPassword=abc
    depends_on:
      - mysql-hive

  flink-jobmanager:
    image: flink:1.20.0-scala_2.12-java11
    container_name: flink-jobmanager
    ports:
      - "18081:8081"
    command: jobmanager
    environment:
      FLINK_PROPERTIES: |
        jobmanager.rpc.address: flink-jobmanager
      AWS_ACCESS_KEY_ID: admin
      AWS_SECRET_ACCESS_KEY: password
      AWS_REGION: us-east-1

  flink-taskmanager:
    image: flink:1.20.0-scala_2.12-java11
    container_name: flink-taskmanager
    depends_on:
      - flink-jobmanager
    command: taskmanager
    environment:
      FLINK_PROPERTIES: |
        jobmanager.rpc.address: flink-jobmanager
        taskmanager.numberOfTaskSlots: 3
      AWS_ACCESS_KEY_ID: admin
      AWS_SECRET_ACCESS_KEY: password
      AWS_REGION: us-east-1

  rest:
    image: tabulario/iceberg-rest
    container_name: iceberg-rest
    ports:
      - "8181:8181"
    environment:
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=password
      - AWS_REGION=us-east-1
      - CATALOG_WAREHOUSE=s3://warehouse/
      - CATALOG_IO__IMPL=org.apache.iceberg.aws.s3.S3FileIO
      - CATALOG_S3_ENDPOINT=http://minio:9000

  minio:
    image: minio/minio
    container_name: minio
    environment:
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=password
      - MINIO_DOMAIN=minio
    ports:
      - "9001:9001"
      - "9000:9000"
    command: [ "server", "/data", "--console-address", ":9001" ]
    networks:
      default:
        aliases:
          - warehouse.minio # Resuelve el problema: Exception in thread "main" java.lang.RuntimeException: org.apache.iceberg.exceptions.ServiceFailureException: Server error: SdkClientException: Received an UnknownHostException when attempting to interact with a service. Log iceberg-rest: Caused by: java.net.UnknownHostException: warehouse.minio

  mc:
    depends_on:
      - minio
    image: minio/mc
    container_name: mc
    environment:
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=password
      - AWS_REGION=us-east-1
    entrypoint: >
      /bin/sh -c "
      until (/usr/bin/mc config host add minio http://minio:9000 admin password) do echo '...waiting...' && sleep 1; done;
      /usr/bin/mc rm -r --force minio/warehouse;
      /usr/bin/mc mb minio/warehouse;
      /usr/bin/mc policy set public minio/warehouse;
      tail -f /dev/null
      "
